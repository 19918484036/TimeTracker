// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeTracker.Server.Data;

#nullable disable

namespace TimeTracker.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231110171641_RecordDataSeeding")]
    partial class RecordDataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeTracker.Shared.RecordData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkEndTimeAfternoon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkEndTimeMorning")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStartTimeAfternoon")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WorkStartTimeMorning")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RecordDatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeAfternoon = new DateTime(2023, 11, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkEndTimeMorning = new DateTime(2023, 11, 11, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeAfternoon = new DateTime(2023, 11, 11, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            WorkStartTimeMorning = new DateTime(2023, 11, 11, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
